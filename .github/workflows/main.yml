name: Build Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.3'
          architecture: 'x64'

      - name: Install requirements
        run: |
          pip install PyInstaller
          pip install -r requirements.txt

      - name: Modify pkg_resources
        run: |
          $path = "C:\hostedtoolcache\windows\Python\3.12.3\x64\Lib\site-packages\pkg_resources\__init__.py"
          (Get-Content $path) -replace 'ImpImporter', 'zipimporter' | Set-Content $path

      - name: Run PyInstaller
        run: |
          python -m PyInstaller --onefile --name hotm4rtei main.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Hotm4rtei
          path: dist/hotm4rtei.exe

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest 1.3.X tag and increment
        id: increment_tag
        run: |
          TAG=$(git tag --list '1.3.*' | sort -V | tail -n1)
          if [[ -z "$TAG" ]]; then
              echo "::set-output name=new_tag::1.3.0"
          else
              NEXT_NUM=$(echo $TAG | awk -F '.' '{print $3+1}')
              echo "::set-output name=new_tag::1.3.$NEXT_NUM"
          fi
        shell: bash


      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment_tag.outputs.new_tag }}
          release_name: 'Hotm4rtei'
          body: 'Automatic release of version ${{ steps.increment_tag.outputs.new_tag }}'
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/hotm4rtei v1.3.exe
          asset_name: Hotm4rtei-Windows-amd64.exe
          asset_content_type: application/zip
    
